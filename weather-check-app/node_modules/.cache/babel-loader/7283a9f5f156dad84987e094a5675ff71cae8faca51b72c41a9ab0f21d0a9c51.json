{"ast":null,"code":"var _jsxFileName = \"/Users/zacharyfountain/Documents/ThriveDX/MSP2/WeatherCheck/weather-check-app/src/Components/Aside.js\",\n  _s = $RefreshSig$();\n// src/components/Aside.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getClothingSuggestions = (temperature, description) => {\n  let suggestions = '';\n  if (temperature >= 30) {\n    suggestions = \"It's hot! Wear light and breathable clothes.\";\n  } else if (temperature >= 20) {\n    suggestions = \"It's warm. T-shirts and shorts would be comfortable.\";\n  } else if (temperature >= 10) {\n    suggestions = \"It's cool. Consider wearing a light jacket or sweater.\";\n  } else {\n    suggestions = \"It's cold. Bundle up with a coat and warm layers.\";\n  }\n\n  // Additional suggestions based on weather description\n  if (description.includes('rain')) {\n    suggestions += ' Don’t forget an umbrella!';\n  } else if (description.includes('snow')) {\n    suggestions += ' Wear waterproof boots and warm gloves.';\n  }\n  return suggestions;\n};\nconst Aside = ({\n  zipCode\n}) => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/weather?zipCode=${zipCode}`);\n        const data = await response.json();\n        setWeatherData(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [zipCode]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n  if (!weatherData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error fetching weather data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    main,\n    weather\n  } = weatherData;\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Clothing Suggestions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: getClothingSuggestions(main.temp, weather[0].description)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Aside, \"Ksd1aZbfo6lc0Huf+oHzbwrumq4=\");\n_c = Aside;\nexport default Aside;\nvar _c;\n$RefreshReg$(_c, \"Aside\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","getClothingSuggestions","temperature","description","suggestions","includes","Aside","zipCode","_s","weatherData","setWeatherData","loading","setLoading","fetchData","response","fetch","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","main","weather","temp","_c","$RefreshReg$"],"sources":["/Users/zacharyfountain/Documents/ThriveDX/MSP2/WeatherCheck/weather-check-app/src/Components/Aside.js"],"sourcesContent":["// src/components/Aside.js\nimport React, { useState, useEffect } from 'react';\n\nconst getClothingSuggestions = (temperature, description) => {\n  let suggestions = '';\n\n  if (temperature >= 30) {\n    suggestions = \"It's hot! Wear light and breathable clothes.\";\n  } else if (temperature >= 20) {\n    suggestions = \"It's warm. T-shirts and shorts would be comfortable.\";\n  } else if (temperature >= 10) {\n    suggestions = \"It's cool. Consider wearing a light jacket or sweater.\";\n  } else {\n    suggestions = \"It's cold. Bundle up with a coat and warm layers.\";\n  }\n\n  // Additional suggestions based on weather description\n  if (description.includes('rain')) {\n    suggestions += ' Don’t forget an umbrella!';\n  } else if (description.includes('snow')) {\n    suggestions += ' Wear waterproof boots and warm gloves.';\n  }\n\n  return suggestions;\n};\n\nconst Aside = ({ zipCode }) => {\n  const [weatherData, setWeatherData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/weather?zipCode=${zipCode}`);\n        const data = await response.json();\n        setWeatherData(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [zipCode]);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (!weatherData) {\n    return <p>Error fetching weather data</p>;\n  }\n\n  const { main, weather } = weatherData;\n\n  return (\n    <aside>\n      <h3>Clothing Suggestions</h3>\n      <p>{getClothingSuggestions(main.temp, weather[0].description)}</p>\n    </aside>\n  );\n};\n\nexport default Aside;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,sBAAsB,GAAGA,CAACC,WAAW,EAAEC,WAAW,KAAK;EAC3D,IAAIC,WAAW,GAAG,EAAE;EAEpB,IAAIF,WAAW,IAAI,EAAE,EAAE;IACrBE,WAAW,GAAG,8CAA8C;EAC9D,CAAC,MAAM,IAAIF,WAAW,IAAI,EAAE,EAAE;IAC5BE,WAAW,GAAG,sDAAsD;EACtE,CAAC,MAAM,IAAIF,WAAW,IAAI,EAAE,EAAE;IAC5BE,WAAW,GAAG,wDAAwD;EACxE,CAAC,MAAM;IACLA,WAAW,GAAG,mDAAmD;EACnE;;EAEA;EACA,IAAID,WAAW,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAE;IAChCD,WAAW,IAAI,4BAA4B;EAC7C,CAAC,MAAM,IAAID,WAAW,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAE;IACvCD,WAAW,IAAI,yCAAyC;EAC1D;EAEA,OAAOA,WAAW;AACpB,CAAC;AAED,MAAME,KAAK,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,yCAAwCR,OAAQ,EAAC,CAAC;QAChF,MAAMS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCP,cAAc,CAACM,IAAI,CAAC;QACpBJ,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpDN,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC;EAEb,IAAII,OAAO,EAAE;IACX,oBAAOX,OAAA;MAAAoB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EAEA,IAAI,CAACf,WAAW,EAAE;IAChB,oBAAOT,OAAA;MAAAoB,QAAA,EAAG;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC3C;EAEA,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGjB,WAAW;EAErC,oBACET,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BxB,OAAA;MAAAoB,QAAA,EAAInB,sBAAsB,CAACwB,IAAI,CAACE,IAAI,EAAED,OAAO,CAAC,CAAC,CAAC,CAACvB,WAAW;IAAC;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEZ,CAAC;AAAChB,EAAA,CApCIF,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AAsCX,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}