{"ast":null,"code":"var _jsxFileName = \"/Users/zacharyfountain/Documents/ThriveDX/MSP2/WeatherCheck/weather-check-app/src/Components/Aside.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n//Aside Component - used for suggesting things to wear based on the location\n\n//DEPENCENCIES\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherApp = () => {\n  _s();\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    const apiKey = 'YOUR_OPENWEATHER_API_KEY';\n    const city = 'YOUR_CITY_NAME';\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`).then(response => setWeather(response.data)).catch(error => console.error(error));\n  }, []);\n  const getClothingSuggestions = (temperature, weatherCondition) => {\n    // Implement your clothing suggestion logic here\n    // Example: if temperature > 25, suggest shorts and t-shirt\n    // You can customize this based on your preferences and location\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weather.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weather.main.temp, \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Weather: \", weather.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Suggestions: \", getClothingSuggestions(weather.main.temp, weather.weather[0].main)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherApp, \"zh6OemVMK1sGCMM7fACoVGDcjjs=\");\n_c = WeatherApp;\nfunction Aside() {\n  _s2();\n  /* PSUEDOCODE:\n   TRYING TO USE THE DATA BEING PULLED IN AND BASED ON THE DATA, THERE'S A DIFFERENT MESSAGE BASED ON THE WEATHER AND THE DESCRIPTION\n       dependencies - import WeatherCard and WeatherApp so I can use the values in the WeatherCard & WeatherApp for my algorithm\n  \n      useState - to set the initial value of the aside. say something like, \"type zipcode to get suggestions for attire\"\n       setMessage - to grab the information on what to say when the zip code is displayed\n       ex) const setMessage = async () => {\n          use if/else statements to choose which message to display. use emojis!\n              an if/else statement for weather[0].description\n              an if/else statement for main.temp\n              an if/else statement for main.humidity\n          nest all of the if/else statements in a trycatch, so if it doesn't work, it sends an error message\n        useEffect - use useEffect to run the setMessage function\n      ex)\n      useEffect(() => {\n       \n      , []}) <--- This is where I put the zipcode to indicate that it wont run unless the zipcode has a value\n       const display - to display the message\n       return - returning the const display\n  \n  */\n\n  let [message, setMessage] = useState(\"Type in ZipCode to get suggestions for attire!\");\n  let [description, setDescription] = useState(\"\");\n  const getWeaterDetails = ({\n    WeatherData\n  }) => {\n    let weatherMessage = \"\";\n    let weatherDescription = \"\";\n    try {\n      if (WeatherData.main.temp > 100) {\n        weatherMessage = \"It's hot.... like really hot... leathers not recommended at all...\";\n      } else if (WeatherData.main.temp < 70) {\n        weatherMessage = \"it's warm today! No need for bundling up\";\n      } else if (WeatherData.main.temp < 45) {\n        weatherMessage = \"It's not that cold outside today, but a small sweater will do\";\n      } else if (WeatherData.main.temp < 20) {\n        weatherMessage = \"Brrr, chilly! try putting on a Jacket!\";\n      } else {\n        weatherMessage = \"\";\n      }\n      if (WeatherData.weather[0].description === \"clear sky\") {\n        weatherDescription = \"You might want to get some sunglasses\";\n      } else if (WeatherData.weather[0].description === \"shower rain\") {\n        weatherDescription = \"Make sure you have an umbrella\";\n      } else if (WeatherData.weather[0].description === \"rain\" && WeatherData.weather[0].description === \"thunderstorm\") {\n        weatherDescription = \"Grab an umbrella! It's pouring!\";\n      } else if (WeatherData.weather[0].description === \"snow\") {\n        weatherDescription = \"get your snowboots 'cause its snowin outside.\";\n      } else {\n        weatherDescription = \"\";\n      }\n      setMessage(weatherMessage);\n      setDescription(weatherDescription);\n    } catch (error) {\n      weatherMessage = \"No zipcode, no attire suggestions. sorry...\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"asideContainer\",\n    children: [message, description]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 17\n  }, this);\n}\n_s2(Aside, \"L6Jy0kv8dNDrJpufhJdgoPJpkSE=\");\n_c2 = Aside;\nexport default Aside;\nvar _c, _c2;\n$RefreshReg$(_c, \"WeatherApp\");\n$RefreshReg$(_c2, \"Aside\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","WeatherApp","_s","weather","setWeather","apiKey","city","get","then","response","data","catch","error","console","getClothingSuggestions","temperature","weatherCondition","children","name","fileName","_jsxFileName","lineNumber","columnNumber","main","temp","description","_c","Aside","_s2","message","setMessage","setDescription","getWeaterDetails","WeatherData","weatherMessage","weatherDescription","className","_c2","$RefreshReg$"],"sources":["/Users/zacharyfountain/Documents/ThriveDX/MSP2/WeatherCheck/weather-check-app/src/Components/Aside.js"],"sourcesContent":["//Aside Component - used for suggesting things to wear based on the location\n\n//DEPENCENCIES\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst WeatherApp = () => {\n  const [weather, setWeather] = useState(null);\n\n  useEffect(() => {\n    const apiKey = 'YOUR_OPENWEATHER_API_KEY';\n    const city = 'YOUR_CITY_NAME';\n\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`)\n      .then(response => setWeather(response.data))\n      .catch(error => console.error(error));\n  }, []);\n\n  const getClothingSuggestions = (temperature, weatherCondition) => {\n    // Implement your clothing suggestion logic here\n    // Example: if temperature > 25, suggest shorts and t-shirt\n    // You can customize this based on your preferences and location\n  };\n\n  return (\n    <div>\n      {weather && (\n        <div>\n          <h2>{weather.name}</h2>\n          <p>Temperature: {weather.main.temp} Â°C</p>\n          <p>Weather: {weather.weather[0].description}</p>\n          <p>Suggestions: {getClothingSuggestions(weather.main.temp, weather.weather[0].main)}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\n\n\nfunction Aside() {\n\n    \n    /* PSUEDOCODE:\n\n    TRYING TO USE THE DATA BEING PULLED IN AND BASED ON THE DATA, THERE'S A DIFFERENT MESSAGE BASED ON THE WEATHER AND THE DESCRIPTION\n\n        dependencies - import WeatherCard and WeatherApp so I can use the values in the WeatherCard & WeatherApp for my algorithm\n    \n        useState - to set the initial value of the aside. say something like, \"type zipcode to get suggestions for attire\"\n\n        setMessage - to grab the information on what to say when the zip code is displayed\n\n        ex) const setMessage = async () => {\n            use if/else statements to choose which message to display. use emojis!\n                an if/else statement for weather[0].description\n                an if/else statement for main.temp\n                an if/else statement for main.humidity\n            nest all of the if/else statements in a trycatch, so if it doesn't work, it sends an error message\n\n\n        useEffect - use useEffect to run the setMessage function\n        ex)\n        useEffect(() => {\n\n        \n        , []}) <--- This is where I put the zipcode to indicate that it wont run unless the zipcode has a value\n\n        const display - to display the message\n\n        return - returning the const display\n    \n    */\n\n\n        \n            let [message, setMessage] = useState(\"Type in ZipCode to get suggestions for attire!\")\n            let [description, setDescription] = useState(\"\");\n        \n            const getWeaterDetails = ({ WeatherData }) => {\n            let  weatherMessage = \"\";\n            let weatherDescription = \"\";\n                try {\n                    if (WeatherData.main.temp > 100) {\n                        weatherMessage = \"It's hot.... like really hot... leathers not recommended at all...\"\n                    } else if(WeatherData.main.temp < 70) {\n                        weatherMessage = \"it's warm today! No need for bundling up\"\n                    } else if(WeatherData.main.temp < 45) {\n                        weatherMessage = \"It's not that cold outside today, but a small sweater will do\"\n                    } else if(WeatherData.main.temp < 20) {\n                        weatherMessage = \"Brrr, chilly! try putting on a Jacket!\"\n                    } else {\n                        weatherMessage = \"\"\n                    }\n        \n                    if (WeatherData.weather[0].description === \"clear sky\") {\n                        weatherDescription = \"You might want to get some sunglasses\"\n                    } else if (WeatherData.weather[0].description === \"shower rain\") {\n                        weatherDescription = \"Make sure you have an umbrella\"\n                    } else if (WeatherData.weather[0].description === \"rain\" && WeatherData.weather[0].description === \"thunderstorm\") {\n                        weatherDescription = \"Grab an umbrella! It's pouring!\"\n                    } else if (WeatherData.weather[0].description === \"snow\") {\n                        weatherDescription = \"get your snowboots 'cause its snowin outside.\"\n                    } else {\n                        weatherDescription =\"\"\n                    }\n                    setMessage(weatherMessage);\n                    setDescription(weatherDescription);\n        \n                } catch (error) {\n                    weatherMessage = \"No zipcode, no attire suggestions. sorry...\"\n                }\n            };\n        \n            \n        \n        \n        \n            return (\n                <div className='asideContainer'>\n                    {message}\n                    {description}\n                </div>\n            )\n        }\n        \n        \n        \n        \n        export default Aside"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}