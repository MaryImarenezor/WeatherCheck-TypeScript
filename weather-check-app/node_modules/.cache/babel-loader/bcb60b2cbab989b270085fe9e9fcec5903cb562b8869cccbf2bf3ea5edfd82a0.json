{"ast":null,"code":"var _jsxFileName = \"/Users/zacharyfountain/Documents/ThriveDX/MSP2/WeatherCheck/weather-check-app/src/Components/Aside.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherApp = () => {\n  _s();\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    const apiKey = 'fd953eddf6f83f966d9240b60bd6fb26';\n    const city = req.params.city;\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`).then(response => setWeather(response.data)).catch(error => console.error(error));\n  }, []);\n  const getClothingSuggestions = (temperature, weatherCondition) => {\n    // Implement your clothing suggestion logic here\n    // Example: if temperature > 25, suggest shorts and t-shirt\n    // You can customize this based on your preferences and location\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weather.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weather.main.temp, \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Weather: \", weather.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Suggestions: \", getClothingSuggestions(weather.main.temp, weather.weather[0].main)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherApp, \"zh6OemVMK1sGCMM7fACoVGDcjjs=\");\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","WeatherApp","_s","weather","setWeather","apiKey","city","req","params","get","then","response","data","catch","error","console","getClothingSuggestions","temperature","weatherCondition","children","name","fileName","_jsxFileName","lineNumber","columnNumber","main","temp","description","_c","$RefreshReg$"],"sources":["/Users/zacharyfountain/Documents/ThriveDX/MSP2/WeatherCheck/weather-check-app/src/Components/Aside.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst WeatherApp = () => {\n  const [weather, setWeather] = useState(null);\n\n  useEffect(() => {\n    const apiKey = 'fd953eddf6f83f966d9240b60bd6fb26';\n    const city = req.params.city;\n\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`)\n      .then(response => setWeather(response.data))\n      .catch(error => console.error(error));\n  }, []);\n\n  const getClothingSuggestions = (temperature, weatherCondition) => {\n    // Implement your clothing suggestion logic here\n    // Example: if temperature > 25, suggest shorts and t-shirt\n    // You can customize this based on your preferences and location\n  };\n\n  return (\n    <div>\n      {weather && (\n        <div>\n          <h2>{weather.name}</h2>\n          <p>Temperature: {weather.main.temp} Â°C</p>\n          <p>Weather: {weather.weather[0].description}</p>\n          <p>Suggestions: {getClothingSuggestions(weather.main.temp, weather.weather[0].main)}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WeatherApp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMS,MAAM,GAAG,kCAAkC;IACjD,MAAMC,IAAI,GAAGC,GAAG,CAACC,MAAM,CAACF,IAAI;IAE5BR,KAAK,CAACW,GAAG,CAAE,qDAAoDH,IAAK,UAASD,MAAO,EAAC,CAAC,CACnFK,IAAI,CAACC,QAAQ,IAAIP,UAAU,CAACO,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC3CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,sBAAsB,GAAGA,CAACC,WAAW,EAAEC,gBAAgB,KAAK;IAChE;IACA;IACA;EAAA,CACD;EAED,oBACElB,OAAA;IAAAmB,QAAA,EACGhB,OAAO,iBACNH,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,EAAKhB,OAAO,CAACiB;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvBxB,OAAA;QAAAmB,QAAA,GAAG,eAAa,EAAChB,OAAO,CAACsB,IAAI,CAACC,IAAI,EAAC,QAAG;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC1CxB,OAAA;QAAAmB,QAAA,GAAG,WAAS,EAAChB,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACwB,WAAW;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChDxB,OAAA;QAAAmB,QAAA,GAAG,eAAa,EAACH,sBAAsB,CAACb,OAAO,CAACsB,IAAI,CAACC,IAAI,EAAEvB,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACsB,IAAI,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrF;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtB,EAAA,CA9BID,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AAgChB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}