{"ast":null,"code":"var _jsxFileName = \"/Users/zacharyfountain/Documents/ThriveDX/MSP2/WeatherCheck/weather-check-app/src/Components/Aside.js\",\n  _s = $RefreshSig$();\n// WeatherClothingSuggestions.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherClothingSuggestions = () => {\n  _s();\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    // Fetch weather data from OpenWeatherMap API\n    const fetchWeatherData = async () => {\n      try {\n        const apiKey = 'fd953eddf6f83f966d9240b60bd6fb26';\n        const city = 'YOUR_CITY_NAME';\n        const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`);\n        setWeather(response.data);\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n      }\n    };\n    fetchWeatherData();\n  }, []);\n  const getClothingSuggestions = () => {\n    // Add logic to determine clothing suggestions based on weather data\n    // You can use the 'weather' state to access temperature, conditions, etc.\n    // Customize this based on your specific requirements.\n    // Example:\n    if (weather && weather.main && weather.main.temp > 20) {\n      return 'It\\'s warm! Wear something light.';\n    } else {\n      return 'It\\'s cool! Consider wearing a jacket.';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Weather Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weather.main.temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Clothing Suggestions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getClothingSuggestions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherClothingSuggestions, \"zh6OemVMK1sGCMM7fACoVGDcjjs=\");\n_c = WeatherClothingSuggestions;\nexport default WeatherClothingSuggestions;\nvar _c;\n$RefreshReg$(_c, \"WeatherClothingSuggestions\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","WeatherClothingSuggestions","_s","weather","setWeather","fetchWeatherData","apiKey","city","response","get","data","error","console","getClothingSuggestions","main","temp","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zacharyfountain/Documents/ThriveDX/MSP2/WeatherCheck/weather-check-app/src/Components/Aside.js"],"sourcesContent":["// WeatherClothingSuggestions.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst WeatherClothingSuggestions = () => {\n  const [weather, setWeather] = useState(null);\n\n  useEffect(() => {\n    // Fetch weather data from OpenWeatherMap API\n    const fetchWeatherData = async () => {\n      try {\n        const apiKey = 'fd953eddf6f83f966d9240b60bd6fb26';\n        const city = 'YOUR_CITY_NAME';\n        const response = await axios.get(\n          `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`\n        );\n\n        setWeather(response.data);\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n      }\n    };\n\n    fetchWeatherData();\n  }, []);\n\n  const getClothingSuggestions = () => {\n    // Add logic to determine clothing suggestions based on weather data\n    // You can use the 'weather' state to access temperature, conditions, etc.\n    // Customize this based on your specific requirements.\n    // Example:\n    if (weather && weather.main && weather.main.temp > 20) {\n      return 'It\\'s warm! Wear something light.';\n    } else {\n      return 'It\\'s cool! Consider wearing a jacket.';\n    }\n  };\n\n  return (\n    <div>\n      {weather && (\n        <div>\n          <h2>Weather Information</h2>\n          <p>Temperature: {weather.main.temp}Â°C</p>\n          {/* Add more weather details as needed */}\n          <h3>Clothing Suggestions</h3>\n          <p>{getClothingSuggestions()}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WeatherClothingSuggestions;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,0BAA0B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,MAAM,GAAG,kCAAkC;QACjD,MAAMC,IAAI,GAAG,gBAAgB;QAC7B,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAC7B,qDAAoDF,IAAK,UAASD,MAAO,EAC5E,CAAC;QAEDF,UAAU,CAACI,QAAQ,CAACE,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDN,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,sBAAsB,GAAGA,CAAA,KAAM;IACnC;IACA;IACA;IACA;IACA,IAAIV,OAAO,IAAIA,OAAO,CAACW,IAAI,IAAIX,OAAO,CAACW,IAAI,CAACC,IAAI,GAAG,EAAE,EAAE;MACrD,OAAO,mCAAmC;IAC5C,CAAC,MAAM;MACL,OAAO,wCAAwC;IACjD;EACF,CAAC;EAED,oBACEf,OAAA;IAAAgB,QAAA,EACGb,OAAO,iBACNH,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BpB,OAAA;QAAAgB,QAAA,GAAG,eAAa,EAACb,OAAO,CAACW,IAAI,CAACC,IAAI,EAAC,OAAE;MAAA;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAEzCpB,OAAA;QAAAgB,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BpB,OAAA;QAAAgB,QAAA,EAAIH,sBAAsB,CAAC;MAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CA/CID,0BAA0B;AAAAoB,EAAA,GAA1BpB,0BAA0B;AAiDhC,eAAeA,0BAA0B;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}